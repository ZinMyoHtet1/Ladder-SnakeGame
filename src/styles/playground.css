.playground_page .wrapper .gameboard .doe {
  position: absolute;
  width: 30px;
  height: 30px;
  display: block;
  transform: translateX(-15px) translateY(15px);
  margin: 2px;
  transition: all 0.2s ease-in;
}

.playground_page .wrapper .gameboard .doe.red_doe {
  transform: translateX(-18px) translateY(18px);
  z-index: 100;
}

.playground_page {
  background-color: var(--background-color);
  height: 100vh;
  display: flex;
  justify-content: center;
}

.playground_page .wrapper {
  width: 500px;
}

.playground_page .wrapper .gameboard {
  position: relative;
  width: 100%;
  height: 500px;
}

.playground_page .wrapper .gameboard img {
  width: 100%;
  height: 100%;
}

/* BREAKPOINTS */
@media only screen and (max-width: 540px) {
  .playground_page .wrapper {
    width: 300px;
  }

  .playground_page .wrapper .gameboard {
    height: 300px;
  }

  .playground_page .wrapper .gameboard .doe {
    width: 18px;
    height: 18px;
    transform: translateX(-11px) translateY(11px);
  }

  .playground_page .wrapper .gameboard .doe.red_doe {
    transform: translateX(-13px) translateY(13px);
  }
}

@media only screen and (max-width: 320px) {
  .playground_page .wrapper {
    width: 250px;
  }

  .playground_page .wrapper .gameboard {
    height: 250px;
  }

  .playground_page .wrapper .gameboard .doe {
    width: 14px;
    height: 14px;
    transform: translateX(-7px) translateY(7px);
  }

  .playground_page .wrapper .gameboard .doe.red_doe {
    transform: translateX(-9px) translateY(9px);
  }
}

@media only screen and (max-width: 260px) {
  .playground_page .wrapper {
    width: 200px;
  }

  .playground_page .wrapper .gameboard {
    height: 200px;
  }

  .playground_page .wrapper .gameboard .doe {
    width: 12px;
    height: 12px;
    /* transform: translateX(-7px) translateY(7px); */
  }

  /* .playground_page .wrapper .gameboard .doe.red_doe {
    transform: translateX(-9px) translateY(9px);
  } */
}

@keyframes doe_animate {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.2);
  }
}

@keyframes rotate_roller {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(-360deg);
  }
}
